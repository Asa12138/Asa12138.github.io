[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "pctax: Analyzing Omics Data with R",
    "section": "",
    "text": "Preface\nOmics technologies have found extensive applications in biology, encompassing disciplines such as microbiome studies, transcriptomics, metabolomics, and beyond. These technologies generate diverse datasets based on distinct methodologies.\nFollowing specific upstream processing, omics data is often transformed into feature abundance tables, representing entities like genes, metabolites, or taxa. These feature abundance tables, coupled with experimental design metadata and various annotation data, serve as the foundation for downstream bioinformatics analysis and visualization, typically conducted using the R and Python programming languages.\nIn response to the growing need for comprehensive omics data analysis tools, we present pctax, an R package designed to streamline the analysis of microbiome data and other omics datasets.\npctax offers a rich array of functionalities to facilitate downstream bioinformatics workflows.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "pctax: Analyzing Omics Data with R",
    "section": "Install",
    "text": "Install\nThe latest development version can be found in https://github.com/Asa12138/pctax.\nFor data manipulation, we recommend to use dplyr. Some functions of pctax are dependent with pcutils, so you also need to install.\n\nremotes::install_github(\"Asa12138/pcutils\")\nremotes::install_github(\"Asa12138/pctax\")\n\n\nlibrary(pctax)\n\n# ========data manipulation\nlibrary(dplyr)\nlibrary(pcutils)\n\nSome Functionalities of pctax:\n\n\n\n\n\nflowchart LR\n  B(pctax)--&gt; C{Functionalities}\n  C --&gt; D[Visualization]\n  C --&gt; E[Diversity Analysis]\n  C --&gt; F[Differential Abundance Analysis]\n  C --&gt; G[Community Assembly Analysis]\n  C --&gt; H[Functional Enrichment Analysis]\n  C --&gt; I[Network Analysis]\n  C --&gt; J[Elemental Cycling Analysis]\n\n\n\n\n\n\n\nVisualization: Utilize built-in functions for visualizing phylogenetic trees, exploring functional enrichments, and creating informative visual representations of complex omics datasets.\nDiversity Analysis: Explore the richness and dissimilarity within and between samples using pctax’s advanced diversity analysis tools.\nDifferential Abundance Analysis: Identify features significantly altered under different experimental conditions, providing insights into the impact of these conditions on the system.\nCommunity Assembly Analysis: Delve into the dynamics of community structure with specialized tools for community assembly analysis.\nFunctional Enrichment Analysis (Integrated into ReporterScore): Assess the functional significance of your omics data through integrated functional enrichment analysis using ReporterScore. Understand the biological implications of detected features in the context of known pathways and processes.\nNetwork Analysis (Integrated into MetaNet): Uncover intricate relationships within your data by leveraging network analysis tools integrated with MetaNet. Visualize and interpret the connections between biological entities, facilitating a deeper understanding of system-level interactions.\nElemental Cycling Analysis: Explore elemental cycling pathways by visualizing the cycling of elements such as C, N, P, S, Fe, and more. pctax allows for the creation of illustrative elemental cycling pathway diagrams, providing insights into the biogeochemical dynamics within your system.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#citation",
    "href": "index.html#citation",
    "title": "pctax: Analyzing Omics Data with R",
    "section": "Citation",
    "text": "Citation\nPlease cite:\nChen Peng, Chao Jiang (2023). pctax: Professional Comprehensive Omics Data Analysis Pipeline. R package, https://github.com/Asa12138/pctax.\n\nsessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.0.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.2      pctax_0.1.0      pcutils_0.2.2    kableExtra_1.3.4\n\nloaded via a namespace (and not attached):\n [1] httr_1.4.4         pkgload_1.3.2      splines_4.2.2      jsonlite_1.8.4    \n [5] viridisLite_0.4.2  shiny_1.7.4.9002   ggrepel_0.9.3      yaml_2.3.6        \n [9] remotes_2.4.2      sessioninfo_1.2.2  pillar_1.9.0       lattice_0.20-45   \n[13] glue_1.6.2         digest_0.6.31      RColorBrewer_1.1-3 promises_1.2.0.1  \n[17] rvest_1.0.3        colorspace_2.1-0   picante_1.8.2      Matrix_1.5-1      \n[21] htmltools_0.5.4    httpuv_1.6.7       plyr_1.8.8         pkgconfig_2.0.3   \n[25] devtools_2.4.5     purrr_1.0.1        xtable_1.8-4       scales_1.2.1      \n[29] webshot_0.5.4      processx_3.8.0     svglite_2.1.1      later_1.3.0       \n[33] tibble_3.2.1       mgcv_1.8-41        generics_0.1.3     ggplot2_3.4.2     \n[37] usethis_2.1.6      ellipsis_0.3.2     cachem_1.0.6       withr_2.5.0       \n[41] cli_3.6.1          magrittr_2.0.3     crayon_1.5.2       mime_0.12         \n[45] memoise_2.0.1      evaluate_0.19      ps_1.7.2           fs_1.5.2          \n[49] fansi_1.0.4        MASS_7.3-60        nlme_3.1-160       xml2_1.3.3        \n[53] pkgbuild_1.4.0     vegan_2.6-4        profvis_0.3.7      tools_4.2.2       \n[57] prettyunits_1.1.1  lifecycle_1.0.3    stringr_1.5.0      munsell_0.5.0     \n[61] cluster_2.1.4      callr_3.7.3        ade4_1.7-20        compiler_4.2.2    \n[65] systemfonts_1.0.4  rlang_1.1.1        grid_4.2.2         rstudioapi_0.14   \n[69] htmlwidgets_1.6.1  miniUI_0.1.1.1     rmarkdown_2.25     codetools_0.2-18  \n[73] gtable_0.3.3       reshape2_1.4.4     R6_2.5.1           knitr_1.45        \n[77] fastmap_1.1.0      utf8_1.2.3         rprojroot_2.0.3    permute_0.9-7     \n[81] desc_1.4.2         ape_5.7            NST_3.1.10         stringi_1.7.8     \n[85] parallel_4.2.2     Rcpp_1.0.10        vctrs_0.6.5        tidyselect_1.2.0  \n[89] xfun_0.42          urlchecker_1.0.1",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "01-intro.html",
    "href": "01-intro.html",
    "title": "\n1  Example data\n",
    "section": "",
    "text": "I will use a metagenomic dataset as an example for the analysis in the following sections, helping you get familiar with downstream analysis of omics data and the usage of pctax.\nLook at the Example data of a microbiome (simulated data):\n\nlibrary(pctax)\nlibrary(pcutils)\ndata(otutab, package = \"pcutils\")\n# help(otutab)\n\nMetadata\nFirstly, the metadata. This is where we record essential information about our study samples. Typically, rows represent sample IDs, while columns encompass various macroscopic features of the samples. These features include experimental groups (control or treatment), sampling time, location, various environmental factors at the sampling point, and phenotypic characteristics of the host, among others.\n\nprint(metadata)\n\n\n\n\n\n\n\nId\nGroup\nenv1\nenv2\nenv3\nenv4\nenv5\nenv6\nlat\nlong\n\n\n\nNS1\nNS1\nNS\n3.057248\n10.235708\n5.554576\n8.084997\n25.007946\n-1.1545668\n26.94422\n103.4767\n\n\nNS2\nNS2\nNS\n4.830219\n11.134527\n5.613455\n8.556829\n16.676898\n0.8116874\n29.08733\n109.6196\n\n\nNS3\nNS3\nNS\n3.753133\n10.062318\n5.582916\n10.226572\n21.689255\n1.4073321\n28.25164\n104.0361\n\n\nNS4\nNS4\nNS\n4.262264\n10.844010\n5.258419\n9.002256\n24.810460\n1.4780532\n33.82415\n106.8651\n\n\nNS5\nNS5\nNS\n2.476135\n7.525840\n6.255314\n9.357587\n19.705527\n0.0581309\n33.51011\n105.4571\n\n\nNS6\nNS6\nNS\n5.131004\n10.827615\n5.180966\n8.141506\n18.390209\n-1.7003257\n31.86864\n102.7832\n\n\nWS1\nWS1\nWS\n4.690185\n8.868384\n5.534423\n2.922556\n13.066594\n-0.9073270\n25.67656\n102.2946\n\n\nWS2\nWS2\nWS\n5.500007\n8.270563\n6.698076\n3.711924\n6.344009\n-0.1699797\n27.69990\n106.0343\n\n\nWS3\nWS3\nWS\n3.220505\n8.435364\n7.462542\n3.906052\n15.703113\n-1.5205620\n28.04572\n108.9124\n\n\nWS4\nWS4\nWS\n5.624307\n7.174707\n5.387799\n2.777254\n12.503655\n1.6144087\n33.86966\n110.1844\n\n\nWS5\nWS5\nWS\n5.013274\n7.678983\n6.478364\n3.527165\n7.391619\n-0.6876136\n28.36314\n107.0412\n\n\nWS6\nWS6\nWS\n6.321235\n7.822989\n6.262504\n3.238742\n10.298175\n0.0661551\n30.07997\n105.0054\n\n\nCS1\nCS1\nCS\n5.242789\n12.053449\n8.383412\n7.175002\n17.666552\n1.0230426\n32.83965\n103.8978\n\n\nCS2\nCS2\nCS\n5.402243\n9.865916\n6.760709\n5.050641\n19.775379\n1.7248702\n30.29499\n101.6969\n\n\nCS3\nCS3\nCS\n5.474717\n12.489934\n5.729690\n4.215989\n16.861294\n-0.8506381\n29.90803\n106.0819\n\n\nCS4\nCS4\nCS\n6.915080\n12.492414\n6.845870\n5.280682\n15.011610\n0.5285857\n31.87761\n104.2137\n\n\nCS5\nCS5\nCS\n6.355684\n13.085380\n6.474958\n5.893205\n17.686923\n-0.5588746\n27.94134\n103.1896\n\n\nCS6\nCS6\nCS\n6.381007\n10.461389\n7.432614\n7.173710\n17.387503\n-0.0904096\n35.29004\n106.2336\n\n\n\n\n\n\n\nHere, the metadata simulates a study on soil microbiome：\n\n\nId: Unique identifier for each sample (name).\n\nGroup: Experimental grouping (NS, WS, CS, and their actual meanings are not necessary for our simulation).\n\nenv1~6: Environmental factors at the sampling points (e.g., pH, temperature, humidity, etc.).\n\nlat and long: Latitude and longitude recording the simulated sampling location (with no actual significance).\nFeature abundance table\nNext is the feature abundance table generated through upstream processing, such as microbial abundance in metagenomics, gene abundance in transcriptomics, or metabolite abundance in metabolomics.\nTypically, rows represent the names of features, and columns represent sample names. It’s a common practice to align the column names of the abundance table exactly with the row names of the metadata. This alignment is highly advantageous for subsequent analyses.\n\nhead(otutab)\n\n\n\n\n\n\n\nNS1\nNS2\nNS3\nNS4\nNS5\nNS6\nWS1\nWS2\nWS3\nWS4\nWS5\nWS6\nCS1\nCS2\nCS3\nCS4\nCS5\nCS6\n\n\n\ns__un_f__Thermomonosporaceae\n1092\n1920\n810\n1354\n1064\n1070\n1252\n1597\n1330\n941\n1233\n1011\n2313\n2518\n1709\n1975\n1431\n1527\n\n\ns__Pelomonas_puraquae\n1962\n1234\n2362\n2236\n2903\n1829\n644\n495\n1230\n1284\n953\n635\n1305\n1516\n844\n1128\n1483\n1174\n\n\ns__Rhizobacter_bergeniae\n588\n458\n889\n901\n1226\n853\n604\n470\n1070\n1028\n846\n670\n1029\n1802\n1002\n1200\n1194\n762\n\n\ns__Flavobacterium_terrae\n244\n234\n1810\n673\n1445\n491\n318\n1926\n1493\n995\n577\n359\n1080\n1218\n754\n423\n1032\n1412\n\n\ns__un_g__Rhizobacter\n1432\n412\n533\n759\n1289\n506\n503\n590\n445\n620\n657\n429\n1132\n1447\n550\n583\n1105\n903\n\n\ns__un_o__Burkholderiales\n886\n683\n824\n912\n1502\n1029\n235\n252\n359\n381\n387\n351\n551\n540\n477\n559\n513\n496\n\n\ns__un_g__Streptomyces\n516\n510\n621\n424\n205\n322\n340\n548\n1590\n776\n493\n508\n624\n757\n560\n1058\n449\n512\n\n\ns__Lentzea_flaviverrucosa\n424\n1033\n310\n440\n311\n485\n414\n416\n309\n505\n673\n407\n805\n600\n815\n415\n683\n463\n\n\ns__un_g__Actinoplanes\n338\n805\n349\n443\n261\n549\n297\n448\n632\n382\n552\n417\n579\n322\n439\n441\n752\n512\n\n\ns__un_g__Rhizobium\n369\n357\n684\n774\n1033\n666\n213\n186\n281\n274\n408\n279\n360\n598\n243\n274\n517\n273\n\n\ns__un_g__Noviherbaspirillum\n321\n344\n317\n364\n561\n364\n470\n386\n235\n415\n351\n184\n435\n497\n511\n419\n320\n383\n\n\ns__un_f__Comamonadaceae\n170\n176\n375\n367\n521\n385\n194\n509\n484\n304\n503\n194\n386\n285\n410\n281\n578\n544\n\n\ns__Bradyrhizobium_neotropicale\n318\n415\n449\n330\n371\n380\n365\n315\n279\n238\n406\n375\n306\n274\n330\n358\n352\n368\n\n\ns__Streptomyces_ederensis\n234\n262\n524\n248\n148\n211\n145\n232\n593\n289\n224\n175\n445\n296\n245\n305\n817\n354\n\n\ns__Actinocorallia_herbida\n260\n315\n58\n454\n144\n184\n162\n277\n151\n268\n253\n194\n396\n470\n240\n310\n463\n233\n\n\ns__un_g__Amycolatopsis\n198\n429\n90\n258\n154\n150\n81\n115\n59\n184\n106\n107\n243\n284\n99\n142\n1547\n103\n\n\ns__Actinophytocola_burenkhanensis\n117\n140\n1152\n58\n30\n64\n268\n140\n74\n186\n175\n125\n139\n31\n296\n251\n201\n368\n\n\ns__un_p__Proteobacteria\n210\n173\n144\n130\n87\n192\n256\n193\n182\n171\n227\n273\n220\n183\n325\n252\n251\n320\n\n\ns__Kribbella_catacumbae\n152\n370\n194\n121\n99\n129\n174\n194\n163\n166\n196\n158\n209\n313\n195\n295\n377\n222\n\n\ns__un_o__Rhizobiales\n202\n205\n322\n237\n235\n215\n254\n161\n147\n161\n178\n215\n156\n183\n222\n166\n146\n203\n\n\n\n\n\n\n\nHere, the otutab represents the abundance of each identified microbial species across all samples.\nFeature annotation (optional)\nHaving both metadata and a feature abundance table allows for various analyses.\nSometimes, additional information comes in the form of feature annotation, containing details about each feature. For instance, in metagenomic data, this might include taxonomic information such as phylum, class, order, family, and genus for each microbial species. In transcriptomics, it could involve functional descriptions and classifications corresponding to gene IDs.\nThis additional layer of annotation enhances our understanding of the features being analyzed. Typically, aligning the row names of feature annotation with the row names of the feature abundance table is advantageous for subsequent analyses.\n\nhead(taxonomy)\n\n\n\n\n\n\n\nKingdom\nPhylum\nClass\nOrder\nFamily\nGenus\nSpecies\n\n\n\ns__un_f__Thermomonosporaceae\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Thermomonosporaceae\ng__un_f__Thermomonosporaceae\ns__un_f__Thermomonosporaceae\n\n\ns__Pelomonas_puraquae\nk__Bacteria\np__Proteobacteria\nc__Betaproteobacteria\no__Burkholderiales\nf__Comamonadaceae\ng__Pelomonas\ns__Pelomonas_puraquae\n\n\ns__Rhizobacter_bergeniae\nk__Bacteria\np__Proteobacteria\nc__Gammaproteobacteria\no__Pseudomonadales\nf__Pseudomonadaceae\ng__Rhizobacter\ns__Rhizobacter_bergeniae\n\n\ns__Flavobacterium_terrae\nk__Bacteria\np__Bacteroidetes\nc__Flavobacteriia\no__Flavobacteriales\nf__Flavobacteriaceae\ng__Flavobacterium\ns__Flavobacterium_terrae\n\n\ns__un_g__Rhizobacter\nk__Bacteria\np__Proteobacteria\nc__Gammaproteobacteria\no__Pseudomonadales\nf__Pseudomonadaceae\ng__Rhizobacter\ns__un_g__Rhizobacter\n\n\ns__un_o__Burkholderiales\nk__Bacteria\np__Proteobacteria\nc__Betaproteobacteria\no__Burkholderiales\nf__un_o__Burkholderiales\ng__un_o__Burkholderiales\ns__un_o__Burkholderiales\n\n\ns__un_g__Streptomyces\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Streptomycetaceae\ng__Streptomyces\ns__un_g__Streptomyces\n\n\ns__Lentzea_flaviverrucosa\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Pseudonocardiaceae\ng__Lentzea\ns__Lentzea_flaviverrucosa\n\n\ns__un_g__Actinoplanes\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Micromonosporaceae\ng__Actinoplanes\ns__un_g__Actinoplanes\n\n\ns__un_g__Rhizobium\nk__Bacteria\np__Proteobacteria\nc__Alphaproteobacteria\no__Rhizobiales\nf__Rhizobiaceae\ng__Rhizobium\ns__un_g__Rhizobium\n\n\ns__un_g__Noviherbaspirillum\nk__Bacteria\np__Proteobacteria\nc__Betaproteobacteria\no__Burkholderiales\nf__Oxalobacteraceae\ng__Noviherbaspirillum\ns__un_g__Noviherbaspirillum\n\n\ns__un_f__Comamonadaceae\nk__Bacteria\np__Proteobacteria\nc__Betaproteobacteria\no__Burkholderiales\nf__Comamonadaceae\ng__un_f__Comamonadaceae\ns__un_f__Comamonadaceae\n\n\ns__Bradyrhizobium_neotropicale\nk__Bacteria\np__Proteobacteria\nc__Alphaproteobacteria\no__Rhizobiales\nf__Bradyrhizobiaceae\ng__Bradyrhizobium\ns__Bradyrhizobium_neotropicale\n\n\ns__Streptomyces_ederensis\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Streptomycetaceae\ng__Streptomyces\ns__Streptomyces_ederensis\n\n\ns__Actinocorallia_herbida\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Thermomonosporaceae\ng__Actinocorallia\ns__Actinocorallia_herbida\n\n\ns__un_g__Amycolatopsis\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Pseudonocardiaceae\ng__Amycolatopsis\ns__un_g__Amycolatopsis\n\n\ns__Actinophytocola_burenkhanensis\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Pseudonocardiaceae\ng__Actinophytocola\ns__Actinophytocola_burenkhanensis\n\n\ns__un_p__Proteobacteria\nk__Bacteria\np__Proteobacteria\nc__un_p__Proteobacteria\no__un_p__Proteobacteria\nf__un_p__Proteobacteria\ng__un_p__Proteobacteria\ns__un_p__Proteobacteria\n\n\ns__Kribbella_catacumbae\nk__Bacteria\np__Actinobacteria\nc__Actinobacteria\no__Actinomycetales\nf__Nocardioidaceae\ng__Kribbella\ns__Kribbella_catacumbae\n\n\ns__un_o__Rhizobiales\nk__Bacteria\np__Proteobacteria\nc__Alphaproteobacteria\no__Rhizobiales\nf__un_o__Rhizobiales\ng__un_o__Rhizobiales\ns__un_o__Rhizobiales\n\n\n\n\n\n\n\nHere, the taxonomy includes taxonomic information for each species, providing valuable insights when exploring the composition of species.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Example data</span>"
    ]
  },
  {
    "objectID": "02-metadata.html",
    "href": "02-metadata.html",
    "title": "\n2  Display metadata\n",
    "section": "",
    "text": "2.1 Sample map\nWe often use maps to visualize the sampling locations of our experiments, overlaying important information on the sampling points.\nsample_map is a tool that facilitates the quick and convenient creation of various types of sampling maps.\nanno_df &lt;- metadata[, c(\"Id\", \"long\", \"lat\", \"Group\")]\ncolnames(anno_df) &lt;- c(\"Id\", \"Longitude\", \"Latitude\", \"Group\")\n\nsample_map(anno_df, mode = 1, group = \"Group\", xlim = c(90, 135), ylim = c(20, 50))\n\n\n\n\n\n\nFigure 2.1: mode1 based on ggplot\nsample_map(anno_df, mode = 3, group = \"Group\")\n\n\n\n\n\n\nFigure 2.2: mode1 based on leaflet\nFor more details on creating maps in R, you can refer to Plot beautiful maps with R.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Display metadata</span>"
    ]
  },
  {
    "objectID": "02-metadata.html#environmental-factor",
    "href": "02-metadata.html#environmental-factor",
    "title": "\n2  Display metadata\n",
    "section": "\n2.2 Environmental factor",
    "text": "2.2 Environmental factor\ncor_plot(metadata[, 3:10])\nmy_lm(metadata[\"env5\"], var = \"env4\", metadata)\ngroup_box(metadata[\"env1\"], group = \"Group\", metadata, alpha = T)\ngroup_box(metadata[\"env5\"], group = \"Group\", metadata, alpha = T)\n\n\n\n\n\n\n\n\nFigure 2.3: correlation plot of numeric metadata\n\n\n\n\n\n\n\n\n\nFigure 2.4: lm plot of env4 and env5\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.5: boxplot of env1 between groups\n\n\n\n\n\n\n\n\n\nFigure 2.6: boxplot of env5 between groups",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Display metadata</span>"
    ]
  },
  {
    "objectID": "03-composition.html",
    "href": "03-composition.html",
    "title": "\n3  Explore composition\n",
    "section": "",
    "text": "3.1 Pre-processing\nThe trans() function contains many normalization methods, suitable for pre-processing of different omics, some refer to vegan::decostand().\nTable 3.1: Normalization methods used in omics\n\n\n\n\nMethod\nDescription\n\n\n\ncpm\nCounts per million\n\n\nminmax\nlinear transfer to (min, max)\n\n\nacpm\nCounts per million, then asinh transfer\n\n\nlog1\n$log(n+1)$ transformat\n\n\ntotal\ndivide by total\n\n\nmax\ndivide by maximum\n\n\nfrequency\ndivide by total and multiply by the number of non-zero items, so that the average of non-zero entries is one.\n\n\nnormalize\nmake margin sum of squares equal to one\n\n\nrange\nstandardize values into range (0,1) (same to minmax(0,1)). If all values are constant, they will be transformed to 0.\n\n\nrank\nrank replaces abundance values by their increasing ranks leaving zeros unchanged.\n\n\nrrank\nrrank is similar but uses relative ranks with maximum 1.\n\n\npa\nscale x to presence/absence scale (0/1).\n\n\nstandardize\nscale x to zero mean and unit variance.\n\n\nhellinger\nsquare root of method = \"total\"\n\n\nlog\nlogarithmic transformation as suggested by Anderson et al. (2006): $log_b(x)+1$ for x&gt;0, where b is the base of the logarithm; zeros are left as zeros.\n\n\nalr\nAdditive log ratio ('alr') transformation (Aitchison 1986) reduces data skewness and compositionality bias.\n\n\nclr\ncentered log ratio ('clr') transformation proposed by Aitchison (1986) reduces data skewness and compositionality bias.\n\n\nrclr\nrobust clr ('rclr') is similar to regular clr (see above) but allows data that contains zeroes.\ntrans(otutab, method = \"log1\") %&gt;% head()\nNS1\nNS2\nNS3\nNS4\nNS5\nNS6\nWS1\nWS2\nWS3\nWS4\nWS5\nWS6\nCS1\nCS2\nCS3\nCS4\nCS5\nCS6\n\n\n\ns__un_f__Thermomonosporaceae\n6.996682\n7.560601\n6.698268\n7.211557\n6.970730\n6.976348\n7.133296\n7.376508\n7.193686\n6.848005\n7.118016\n6.919684\n7.746733\n7.831617\n7.444249\n7.588830\n7.266827\n7.331715\n\n\ns__Pelomonas_puraquae\n7.582229\n7.118826\n7.767687\n7.712891\n7.973844\n7.512071\n6.469250\n6.206576\n7.115582\n7.158514\n6.860664\n6.455199\n7.174724\n7.324490\n6.739337\n7.029088\n7.302496\n7.069023\n\n\ns__Rhizobacter_bergeniae\n6.378426\n6.129050\n6.791221\n6.804614\n7.112327\n6.749931\n6.405228\n6.154858\n6.976348\n6.936343\n6.741701\n6.508769\n6.937314\n7.497207\n6.910751\n7.090910\n7.085902\n6.637258\n\n\ns__Flavobacterium_terrae\n5.501258\n5.459586\n7.501634\n6.513230\n7.276556\n6.198479\n5.765191\n7.563720\n7.309212\n6.903747\n6.359574\n5.886104\n6.985642\n7.105786\n6.626718\n6.049734\n6.940222\n7.253470\n\n\ns__un_g__Rhizobacter\n7.267525\n6.023448\n6.280396\n6.633318\n7.162397\n6.228511\n6.222576\n6.381816\n6.100319\n6.431331\n6.489205\n6.063785\n7.032624\n7.277939\n6.311735\n6.369901\n7.008505\n6.806829\n\n\ns__un_o__Burkholderiales\n6.787845\n6.527958\n6.715383\n6.816736\n7.315218\n6.937314\n5.463832\n5.533390\n5.886104\n5.945421\n5.961005\n5.863631\n6.313548\n6.293419\n6.169611\n6.327937\n6.242223\n6.208590\nrm_low(), guolv() and hebing() functions can help filter or aggregate the omics data.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Explore composition</span>"
    ]
  },
  {
    "objectID": "03-composition.html#stackplot",
    "href": "03-composition.html#stackplot",
    "title": "\n3  Explore composition\n",
    "section": "\n3.2 Stackplot",
    "text": "3.2 Stackplot\n# sum the abundance to Phylum level\nhebing(otutab, taxonomy$Phylum, margin = 1, act = \"sum\") -&gt; phylum\nstackplot(phylum, metadata, group = \"Group\", topN = 10) +\n  scale_fill_manual(values = get_cols(10))\nstackplot(phylum, metadata,\n  group = \"Group\", style = \"sample\",\n  group_order = TRUE, flow = TRUE, relative = FALSE\n) +\n  scale_fill_manual(values = get_cols(10))\n\n\n\n\n\n\n\n\nFigure 3.1: Stack plot\n\n\n\n\n\n\n\n\n\nFigure 3.2: Stack flow plot with sample style\n\n\n\n\n\nThe stackplot function offers a wide range of parameters to facilitate the adjustment of the final graphical output. For further details and examples on drawing bar plots and their transformations in R, please refer to R Draw the bar plot and its transformation.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Explore composition</span>"
    ]
  },
  {
    "objectID": "03-composition.html#rarefaction",
    "href": "03-composition.html#rarefaction",
    "title": "\n3  Explore composition\n",
    "section": "\n3.3 Rarefaction",
    "text": "3.3 Rarefaction\nRarefaction is a method used to assess the relationship between sample community data sampling effort and species richness within the sample. Commonly used in ecology, it evaluates whether the observed species diversity saturates given a certain number of samples or sequences, and whether additional sampling is needed to fully capture species richness within the sample.\nFor sample data, Rarefaction curves display the number of observed species at different levels of sampling effort (or sequence numbers). By plotting Rarefaction curves, one can assess how species diversity changes with varying sampling depths and determine if saturation has been reached.\nFor species data, Rarefaction curves display the number of observed samples at different levels of sampling effort (or sequence numbers). Through this method, one can evaluate how sample numbers change with different sampling depths and determine if additional samples are necessary to fully capture species richness.\na &lt;- rare_curve_sample(otutab)\nplot(a)\n\na &lt;- rare_curve_species(otutab, mode = 1)\nplot(a)\n\n\n\n\n\n\n\n\nFigure 3.3: Rarefaction curves of sample data\n\n\n\n\n\n\n\n\n\nFigure 3.4: Rarefaction curves of species data",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Explore composition</span>"
    ]
  },
  {
    "objectID": "03-composition.html#phylogenetic-tree",
    "href": "03-composition.html#phylogenetic-tree",
    "title": "\n3  Explore composition\n",
    "section": "\n3.4 Phylogenetic tree",
    "text": "3.4 Phylogenetic tree\n\nann_tree(taxonomy, otutab) -&gt; tree\neasy_tree(tree, add_abundance = FALSE)\n\n\n\n\n\n\nFigure 3.5: Phylogenetic tree\n\n\n\n\n\neasy_tree(tree, add_tiplab = FALSE) -&gt; p\nsome_tax &lt;- table(taxonomy$Phylum) %&gt;%\n  sort(decreasing = TRUE) %&gt;%\n  head(5) %&gt;%\n  names()\nadd_strip(p, some_tax)\n\n\n\n\n\n\nFigure 3.6: Phylogenetic tree with some strips\n\n\n\n\nYou can refer to Basic phylogenetic tree and Advanced phylogenetic tree to plot the phylogenetic tree using ggtree.\nIn addition, you can also choose to use online platforms like iPhylo and iTOL for interactive plotting.\niPhylo is a free online platform for generating, annotating, and visualizing phylogenetic trees. It allows you to plot various tree diagrams for species, compounds, and other hierarchical structures and conveniently add complex annotation information.\niPhylo Website: https://iphylo.net\nFor more information, you can check out our Online Guide Book.\n\n\nsangji_plot(tree, width = 900, height = 700)\n\n\n\n\n\n\nFigure 3.7: Sankey plot of taxanomy\n\n\n\n\nsunburst(tree)\n\n\n\n\n\n\nFigure 3.8: Sunburst plot of taxanomy",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Explore composition</span>"
    ]
  },
  {
    "objectID": "03-composition.html#rtaxonkit",
    "href": "03-composition.html#rtaxonkit",
    "title": "\n3  Explore composition\n",
    "section": "\n3.5 Rtaxonkit",
    "text": "3.5 Rtaxonkit\nTaxonkit is a Practical and Efficient NCBI Taxonomy Toolkit (1).\nWe recommend you download this excellent software to help next analysis. Or you can use Taxonkit in R by pctax interface as followed:\n\n# 1. This function help you install suitable version taxonkit\ninstall_taxonkit()\n# taxonkit has been successfully installed!\n\n# 2. Then download the NCBI taxonomy database.\ndownload_taxonkit_dataset()\n# Taxonkit files downloaded and copied successfully.\n\n# 3. Check whether taxonkit is ready\ncheck_taxonkit()\n# ==============Taxonkit is available if there is help message above==============\n# =========================Taxonkit dataset is available!=========================\n\nThen you can use taxonkit in R just like in terminal.\n\n?taxonkit_lineage\n\n# taxonkit_list\n# taxonkit_reformat\n# taxonkit_name2taxid\n# taxonkit_filter\n# taxonkit_lca\n\n\nlineage &lt;- taxonkit_lineage(\"9606\\n63221\", show_name = TRUE, show_rank = TRUE, text = T)\nlineage\n\n[1] \"9606\\tcellular organisms;Eukaryota;Opisthokonta;Metazoa;Eumetazoa;Bilateria;Deuterostomia;Chordata;Craniata;Vertebrata;Gnathostomata;Teleostomi;Euteleostomi;Sarcopterygii;Dipnotetrapodomorpha;Tetrapoda;Amniota;Mammalia;Theria;Eutheria;Boreoeutheria;Euarchontoglires;Primates;Haplorrhini;Simiiformes;Catarrhini;Hominoidea;Hominidae;Homininae;Homo;Homo sapiens\\tHomo sapiens\\tspecies\"                                                   \n[2] \"63221\\tcellular organisms;Eukaryota;Opisthokonta;Metazoa;Eumetazoa;Bilateria;Deuterostomia;Chordata;Craniata;Vertebrata;Gnathostomata;Teleostomi;Euteleostomi;Sarcopterygii;Dipnotetrapodomorpha;Tetrapoda;Amniota;Mammalia;Theria;Eutheria;Boreoeutheria;Euarchontoglires;Primates;Haplorrhini;Simiiformes;Catarrhini;Hominoidea;Hominidae;Homininae;Homo;Homo sapiens;Homo sapiens neanderthalensis\\tHomo sapiens neanderthalensis\\tsubspecies\"\n\n\n\n\n\n\n1. \nW. Shen, H. Ren, TaxonKit: A practical and efficient NCBI taxonomy toolkit. Journal of Genetics and Genomics. 48, 844–850 (2021).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Explore composition</span>"
    ]
  },
  {
    "objectID": "04-diversity.html",
    "href": "04-diversity.html",
    "title": "\n4  Diversity analysis\n",
    "section": "",
    "text": "4.1 α-diversity\nTable 4.2: Some α-diversity metrics\n\n\n\n\nMetric\nDescription\n\n\n\nRichness\nThe total number of different species observed in a sample.\n\n\nChao1\nAn estimator of species richness that takes into account the number of rare species observed and extrapolates the total species richness of the community.\n\n\nACE\nAbundance-based Coverage Estimator (ACE) estimates species richness by accounting for the abundance distribution of species in a sample.\n\n\nGC\nThe Gini coefficient measures the evenness of species abundance distribution in a community.\n\n\nShannon\nShannon diversity index considers both species richness and evenness of species abundance in a community. Higher values indicate greater diversity.\n\n\nSimpson\nSimpson diversity index measures the probability that two randomly selected individuals in a community belong to the same species. Lower values indicate greater diversity.\n\n\nPD\nPhylogenetic Diversity (PD) measures the amount of evolutionary history represented by species in a community.\n\n\nPielou\nPielou's evenness index assesses how evenly the individuals in a community are distributed among the species present. Higher values indicate greater evenness.\nCalculate a_diversity of otutab then link to experiment group or environment variable:\nFigure 4.1: α-diversity between groups\n\n\n\n\n\n\n\n\n\nFigure 4.2: lm of α-diversity and env1",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diversity analysis</span>"
    ]
  },
  {
    "objectID": "04-diversity.html#α-diversity",
    "href": "04-diversity.html#α-diversity",
    "title": "\n4  Diversity analysis\n",
    "section": "",
    "text": "a_diversity(otutab) -&gt; a_res\nplot(a_res, \"Group\", metadata)\nplot(a_res, \"env1\", metadata)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diversity analysis</span>"
    ]
  },
  {
    "objectID": "04-diversity.html#β-diversity",
    "href": "04-diversity.html#β-diversity",
    "title": "\n4  Diversity analysis\n",
    "section": "\n4.2 β-diversity",
    "text": "4.2 β-diversity\nDistance\nFirstly, we should understand the dissimilarity indices for community. The vegan::vegdist() function provides a wide range of distance metrics based on abundance calculations. Additionally, there are distance metrics that incorporate phylogenetic data such as “unifrac,” “beta_mpd,” “beta_mntd,” and “phylosor,” all integrated into the mat_dist function.\n\n\n\nTable 4.3: Some dissimilarity indices for community\n\n\n\n\nDistance.Coefficient\nDescription\n\n\n\nManhattan\nManhattan distance calculates the sum of absolute differences between coordinates in each dimension. It is suitable for data with categorical variables or attributes.\n\n\nEuclidean\nEuclidean distance calculates the straight-line distance between two points in a multidimensional space. It is commonly used when data are continuous and have no categorical attributes.\n\n\nCanberra\nCanberra distance is a weighted version of Manhattan distance that emphasizes the importance of small differences between coordinates. It is often used for ecological data analysis.\n\n\nClark\nClark distance measures the proportion of non-zero attributes that are different between two samples.\n\n\nBray\nBray distance calculates the dissimilarity between two samples based on the sum of absolute differences in abundances.\n\n\nKulczynski\nKulczynski distance measures the similarity between two samples based on the arithmetic mean of proportions of common attributes.\n\n\nJaccard\nJaccard distance measures dissimilarity between two samples based on the proportion of unique attributes. It is commonly used in ecology for binary data.\n\n\nGower\nGower distance is a generalization of Manhattan distance for mixed data types, including categorical and continuous variables.\n\n\nAltGower\nAltGower distance is an alternative form of Gower distance that uses an alternative method to standardize continuous variables.\n\n\nMorisita\nMorisita distance measures dissimilarity between two samples based on the frequency of shared attributes, with emphasis on rare attributes.\n\n\nHorn\nHorn distance measures dissimilarity between two samples based on the geometric mean of proportions of shared attributes.\n\n\nMountford\nMountford distance measures dissimilarity between two samples based on the reciprocal of the arithmetic mean of proportions of shared attributes.\n\n\nRaup\nRaup distance measures dissimilarity between two samples based on the probability of shared attributes.\n\n\nBinomial\nBinomial distance measures dissimilarity between two samples based on the probability of observing shared attributes.\n\n\nChao\nChao distance is a modification of Jaccard distance that adjusts for undersampling of rare species.\n\n\nCao\nCao distance is a modification of Chao distance that incorporates species abundance information.\n\n\nMahalanobis\nMahalanobis distance measures the distance between two samples in multidimensional space, accounting for correlation between variables.\n\n\nChisq\nChisq distance calculates the dissimilarity between two samples based on the chi-squared distance between categorical variables.\n\n\nChord\nChord distance calculates dissimilarity between two samples based on the angles between points in multidimensional space.\n\n\nHellinger\nHellinger distance measures dissimilarity between two samples based on the square root of the sum of squared differences in square root-transformed abundances.\n\n\nAitchison\nAitchison distance is a transformation of compositional data that allows for Euclidean distance calculation in log-ratio space.\n\n\nRobust Aitchison\nRobust Aitchison distance is a robust version of Aitchison distance that reduces the influence of outliers in the data.\n\n\nUnifrac\nUnifrac distance measures dissimilarity between microbial communities based on evolutionary distances in a phylogenetic tree.\n\n\nBeta MPD\nBeta MPD (Mean Phylogenetic Distance) measures the phylogenetic diversity between two communities based on the mean phylogenetic distance of species pairs.\n\n\nBeta MNTD\nBeta MNTD (Mean Nearest Taxon Distance) measures the phylogenetic turnover between two communities based on the mean nearest taxon distance.\n\n\nPhylosor\nPhylosor distance measures the dissimilarity between communities based on the proportion of shared branches in a phylogenetic tree.\n\n\n\n\n\n\n\n\n\ndist1 &lt;- mat_dist(otutab, method = \"bray\")\ndist1\n##           NS1       NS2       NS3       NS4       NS5       NS6       WS1\n## NS2 0.2965660                                                            \n## NS3 0.3323402 0.3751370                                                  \n## NS4 0.2855628 0.3480858 0.3022878                                        \n## NS5 0.3165963 0.4463875 0.2980537 0.2942927                              \n## NS6 0.2434597 0.3109617 0.2983203 0.2508816 0.2999133                    \n##           WS2       WS3       WS4       WS5       WS6       CS1       CS2\n## NS2                                                                      \n## NS3                                                                      \n## NS4                                                                      \n## NS5                                                                      \n## NS6                                                                      \n##           CS3       CS4       CS5\n## NS2                              \n## NS3                              \n## NS4                              \n## NS5                              \n## NS6                              \n##  [ reached getOption(\"max.print\") -- omitted 12 rows ]\n\nhclust(dist1) %&gt;% plot()\n\n\n\n\n\n\nFigure 4.3: Cluster dendrogram of samples\n\n\n\n\nTransform the dist object to b_dist object, which is more readable and easy to plot.\n\nas.b_dist(dist1, group_df = metadata[\"Group\"]) -&gt; b_dist1\n\nhead(b_dist1, n = 10)\n##    name1 name2       dis group1 group2 variable group\n## 1    NS2   NS1 0.2965660     NS     NS       NS intra\n## 2    NS3   NS1 0.3323402     NS     NS       NS intra\n## 3    NS4   NS1 0.2855628     NS     NS       NS intra\n## 4    NS5   NS1 0.3165963     NS     NS       NS intra\n## 5    NS6   NS1 0.2434597     NS     NS       NS intra\n## 6    WS1   NS1 0.3201161     WS     NS    NS_WS inter\n## 7    WS2   NS1 0.3646047     WS     NS    NS_WS inter\n## 8    WS3   NS1 0.3480162     WS     NS    NS_WS inter\n## 9    WS4   NS1 0.2967074     WS     NS    NS_WS inter\n## 10   WS5   NS1 0.2889362     WS     NS    NS_WS inter\n\nplot(b_dist1, c_group = \"intra\", alpha = T)\nplot(b_dist1, mode = 2)\n\n\n\n\n\n\n\n\nFigure 4.4: Boxplot shows the distance of samples within each group\n\n\n\n\n\n\n\n\n\nFigure 4.5: Density plot shows there is significant different between inter- and intra- group.\n\n\n\n\n\nWe can also relate the distances between samples in the abundance table to other distances, such as the actual geographical distances of sampling, to observe if there is a pattern of decreasing similarity with geographical distance:\n\nmetadata[, c(\"lat\", \"long\")] -&gt; geo\ngeo_sim(otutab, geo) -&gt; geo_res\nmy_lm(geo_res[4], \"dis.geo\", geo_res) + labs(x = \"Distance(km)\", y = \"1-bray\")\n\n\n\n\n\n\nFigure 4.6: lm between similarity (1-bray) and geographical distance\n\n\n\n\nOrdination analysis\nThere are a range of dimensionality reduction methods available for analysis, including Constrained and non-Constrained. For more details, you can refer to Dimension reduction/ordination analysis\n\n\n\nTable 4.4: Various dimensionality reduction methods for β-diversity\n\n\n\n\nShort\nName\nDescription\n\n\n\nPCA\nPrincipal Component Analysis (PCA)\nPCA is a linear technique used to reduce the dimensionality of the data by transforming it into a new coordinate system aligned with the directions of maximum variance. It captures the most significant patterns in the data.\n\n\nPCoA\nPrincipal Coordinates Analysis (PCoA)\nPCoA is a method similar to PCA, but it operates on distance or dissimilarity matrices, making it suitable for analyzing ecological or genetic data. It visualizes relationships between samples based on their pairwise dissimilarities.\n\n\nCA\nCorrespondence Analysis (CA)\nCA is used to explore relationships between categorical variables in a dataset. It reduces the dimensionality of the data and projects variables onto a lower-dimensional space while preserving the relationships between them.\n\n\nDCA\nDetrended Correspondence Analysis (DCA)\nDCA is a variation of CA designed for ecological data. It is particularly useful for exploring species-environment relationships in community ecology and visualizing gradients in species composition.\n\n\nNMDS\nNon-metric Multidimensional Scaling (NMDS)\nNMDS is a nonlinear method for dimensionality reduction that preserves the rank order of distances between samples. It is commonly used in ecology to visualize dissimilarities or distances between samples.\n\n\nPLS-DA\nPartial Least Squares Discriminant Analysis (PLS-DA)\nPLS-DA is a supervised dimensionality reduction technique used in classification problems. It identifies latent variables that maximize the separation between predefined classes in the data.\n\n\nt-SNE\nt-distributed Stochastic Neighbor Embedding (t-SNE)\nt-SNE is a nonlinear dimensionality reduction technique that focuses on preserving local structure in the data. It is commonly used for visualizing high-dimensional data in a lower-dimensional space.\n\n\nUMAP\nUniform Manifold Approximation and Projection (UMAP)\nUMAP is a state-of-the-art nonlinear dimensionality reduction method known for its ability to preserve both local and global structure in high-dimensional data. It is effective for visualizing complex datasets.\n\n\nLDA\nLinear Discriminant Analysis (LDA)\nLDA is a supervised dimensionality reduction technique used for classification tasks. It finds the linear combinations of features that best separate different classes in the data.\n\n\n\n\n\n\n\n\nLike PCA, PCoA, NMDS, RDA, CCA… For example:\nPCA:\nb_analyse(otutab, method = \"pca\") -&gt; b_res\nplot(b_res, \"Group\", metadata, bi = T, rate = 0.5)\nplot(b_res, \"Group\", metadata, mode = 3)\n\n\n\n\n\n\n\n\nFigure 4.7: PCA for β-diversity\n\n\n\n\n\n\n\n\n\nFigure 4.8: PCA for β-diversity in other style\n\n\n\n\n\n\nb_analyse(otutab, method = \"pca\", ndim = 3) -&gt; b_res\nb_res_3d(b_res, \"Group\", metadata)\n## $PCA\n\nRDA:\n\nenv &lt;- metadata[, 6:10]\n# RDA\nmyRDA(otutab, env) -&gt; phy.rda\n## \n## Call:\n## vegan::decorana(veg = dat.h) \n## \n## Detrended correspondence analysis with 26 segments.\n## Rescaling of axes with 4 iterations.\n## Total inertia (scaled Chi-square): 0.3192 \n## \n##                         DCA1    DCA2    DCA3     DCA4\n## Eigenvalues          0.03142 0.02276 0.01927 0.017818\n## Additive Eigenvalues 0.03142 0.02276 0.01927 0.017881\n## Decorana values      0.03169 0.02142 0.01511 0.009314\n## Axis lengths         0.73929 0.72605 0.52357 0.666913\n## \n## DCA analysis, select the sorting analysis model according to the first value of the Axis lengths row\n##    Axis Lengths &gt;4.0-CCA (based on unimodal model, canonical correspondence analysis);\n##    If it is between 3.0-4.0 - both RDA/CCA;\n##    If less than 3.0-RDA (based on linear model, redundancy analysis)\n## [1] \"===============Initial Model================\"\n## [1] \"Initial cca, vif&gt;20 indicates serious collinearity:\"\n##     env4     env5     env6      lat     long \n## 2.574997 2.674671 1.252002 1.381839 1.211392 \n## Initial Model R-square: 0.04828743 \n## [1] \"=============Statistics===========\"\n## 0.3282029 Constrained indicates the degree to which environmental factors explain differences in community structure\n## 0.6717971 unconstrained means that the environmental factors cannot explain the part of the community structure\nRDA_plot(phy.rda, \"Group\", metadata)\n\n\n\n\n\n\nFigure 4.9: RDA for β-diversity associated environmental variables\n\n\n\n\nTo assess the impact and significance of environmental factors on the abundance table, you can utilize statistical tests such as PERMANOVA (Permutational Multivariate Analysis of Variance) with methods like “adonis,” “anosim,” “mrpp,” or “mantel”. Alternatively, you can employ the “envfit” function for testing.\n\n\n\nTable 4.5: Statistical tests for PERMANOVA\n\n\n\n\nMethod\nDescription\n\n\n\nAdonis\nA permutation-based multivariate analysis of variance (PERMANOVA) method used to test for significant differences in multivariate data sets across different groups or treatments.\n\n\nAnosim\nAnalysis of Similarities is a non-parametric method for testing the significance of differences between groups of samples based on dissimilarity matrices.\n\n\nMRPP\nMulti-response Permutation Procedure is a permutation-based method for testing significant differences in multivariate data sets, similar to Anosim but utilizing a different test statistic.\n\n\nMantel\nA statistical method used to assess the correlation between two distance or dissimilarity matrices, often used to examine the relationship between community dissimilarities and environmental distances.\n\n\nEnvfit\nA function used to fit environmental variables onto ordination plots, assessing the significance and strength of the relationship between environmental variables and sample ordinations using permutation tests.\n\n\n\n\n\n\n\n\npermanova(otutab, env, method = \"adonis\") -&gt; adonis_res\nsanxian(adonis_res)\n\nenvfitt(phy.rda, env) -&gt; envfit_res\nplot(envfit_res)\n\n\n\n\n\n\n\n\ngroup\n\n\nr2\n\n\np_value\n\n\nsig\n\n\n\n\n\nenv4\n\n\n0.116\n\n\n0.001\n\n\nTRUE\n\n\n\n\nenv5\n\n\n0.097\n\n\n0.002\n\n\nTRUE\n\n\n\n\nenv6\n\n\n0.060\n\n\n0.406\n\n\nFALSE\n\n\n\n\nlat\n\n\n0.058\n\n\n0.463\n\n\nFALSE\n\n\n\n\nlong\n\n\n0.053\n\n\n0.756\n\n\nFALSE\n\n\n\n\n\n\nFigure 4.10: Adonis result for environmental factors\n\n\n\n\n\n\n\n\n\nFigure 4.11: Adonis result for environmental factors\n\n\n\n\n\nWe can also utilize Mantel tests to assess the correlation between abundance tables and environmental factors, and create this elegant visualization (integrating correlation heatmaps and network plots):\n\n# construct a simulated multi-group abundance table\ncbind(group = rep(c(\"a\", \"b\", \"c\"), c(200, 100, 185)), otutab) -&gt; g_otutab\n\nmetadata[, 3:8, drop = FALSE] -&gt; env\nm_group_env(g_otutab, env) -&gt; mant_g\nplot(mant_g)\n\n\n\n\n\n\nFigure 4.12: Multi-group mantel-test result",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diversity analysis</span>"
    ]
  },
  {
    "objectID": "04-diversity.html#ζ-diversity",
    "href": "04-diversity.html#ζ-diversity",
    "title": "\n4  Diversity analysis\n",
    "section": "\n4.3 ζ-diversity",
    "text": "4.3 ζ-diversity\nLearn the concept of zeta diversity from (1). The study introduces zeta (ζ) diversity as a novel concept and metric for measuring, characterizing, and relating diversity patterns. It is defined as the number of species shared by multiple combinations. Unlike other measures of species turnover, zeta diversity divides and quantifies the complete diversity components of multiple combinations, thereby comprehensively characterizing the spatial structure of multi-species distributions.\n\nzeta_result &lt;- z_diversity(otutab, metadata[\"Group\"], zetadiv_params = list(sam = 200))\nplot(zeta_result, lm_model = \"exp\", text = TRUE)\n\n\n\n\n\n\nFigure 4.13: RDA for β-diversity associated environmental variables\n\n\n\n\n\n\n\n\n1. \nC. Hui, M. A. McGeoch, Zeta Diversity as a Concept and Metric That Unifies Incidence-Based Biodiversity Patterns. The American Naturalist. 184, 684–694 (2014).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Diversity analysis</span>"
    ]
  },
  {
    "objectID": "05-differential.html",
    "href": "05-differential.html",
    "title": "\n5  Differential abundance analysis\n",
    "section": "",
    "text": "5.1 Lefse\nLEfSe (Linear discriminant analysis Effect Size) is a computational tool used for identifying biomarkers that differentially characterize the microbial communities associated with different sample classes.\nIt employs a combination of statistical tests, including the Kruskal-Wallis sum-rank test and linear discriminant analysis (LDA), to determine features (e.g., taxa, genes) that show significant differences in abundance between classes while also considering the effect size of these differences. LEfSe then ranks these features based on their effect size, allowing researchers to identify the most biologically relevant biomarkers associated with different sample groups.\nThis approach is particularly useful in microbiome research for identifying taxa or functional genes that are significantly associated with specific experimental conditions or clinical outcomes.\nlibrary(microeco)\ndata(dataset)\nt1 &lt;- trans_diff$new(dataset = dataset, method = \"lefse\", group = \"Group\")\nt1$plot_diff_bar(use_number = 1:20)\nt1$plot_diff_cladogram(use_taxa_num = 100, use_feature_num = 30, select_show_labels = NULL)\n\n\n\n\n\n\nFigure 5.4: LDA bar plot of some taxa\n\n\n\n\n\n\n\n\n\nFigure 5.5: Cladogram plot of taxa with significant difference",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Differential abundance analysis</span>"
    ]
  },
  {
    "objectID": "05-differential.html#randomforest",
    "href": "05-differential.html#randomforest",
    "title": "\n5  Differential abundance analysis\n",
    "section": "\n5.2 RandomForest",
    "text": "5.2 RandomForest\nRandomForest is a machine learning algorithm that can be applied not only for predictive modeling tasks but also for feature selection and differential analysis. It works by constructing multiple decision trees during training and outputting the mode of the classes (classification) or the mean prediction (regression) of the individual trees. In the context of differential analysis,\nRandomForest can be used to identify features (e.g., variables, genes, or taxa) that are most informative for classifying samples into different groups. By analyzing the importance scores assigned to each feature by the algorithm, researchers can identify the subset of features that contribute the most to the classification outcome.\nThis makes RandomForest a versatile tool for feature selection in various domains, including bioinformatics, where it can help in identifying key biomarkers or predictors associated with different experimental conditions or phenotypes.\n\nsuijisenlin(otutab, metadata[\"Group\"]) -&gt; rf_res\nrf_res$imp\n\n\n\n\n\n\nFigure 5.6: Top 10 taxa in RandomForest model",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Differential abundance analysis</span>"
    ]
  },
  {
    "objectID": "06-cluster.html",
    "href": "06-cluster.html",
    "title": "\n6  Clustering analysis\n",
    "section": "",
    "text": "6.1 Fuzzy C-means\nFuzzy C-means (FCM) clustering is a popular algorithm used for partitioning data points into clusters in a dataset. Unlike traditional K-means clustering, FCM allows each data point to belong to multiple clusters with varying degrees of membership, making it a soft clustering algorithm.\nIn FCM, each data point is assigned a membership value for each cluster, representing the degree to which it belongs to that cluster. These membership values are determined based on minimizing an objective function, typically the fuzzy objective function, which quantifies the similarity between data points and cluster centroids while considering the fuzziness of cluster membership.\nThe algorithm iteratively updates cluster centroids and membership values until convergence is achieved. FCM is widely used in various fields, including pattern recognition, image segmentation, and bioinformatics, for its ability to identify complex patterns and accommodate uncertainty in data clustering.\nFigure 6.1: Optimal number of clusters based on Elbow method\n\n\n\n\n\n\n\n\n\nFigure 6.2: Optimal number of clusters based on Silhouette method\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.3: C-means result of three centers, line plot\n\n\n\n\n\n\n\n\n\nFigure 6.4: C-means result of three centers, scatter plot",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Clustering analysis</span>"
    ]
  },
  {
    "objectID": "06-cluster.html#fuzzy-c-means",
    "href": "06-cluster.html#fuzzy-c-means",
    "title": "\n6  Clustering analysis\n",
    "section": "",
    "text": "library(ReporterScore)\npcutils::hebing(otutab, metadata$Group) -&gt; otu_group\ncm_test_k(otu_group, filter_var = 0.7)\n## $cp1\n## \n## $cp2\n## \n## $cp3\n## NULL\ncm_res &lt;- c_means(otu_group, k_num = 3, filter_var = 0.7)\nplot(cm_res, 0.8)\nplot(cm_res, 0.8, mode = 2)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Clustering analysis</span>"
    ]
  },
  {
    "objectID": "07-community.html",
    "href": "07-community.html",
    "title": "\n7  Community assembly\n",
    "section": "",
    "text": "7.1 Solan NCM\nncm(otutab) -&gt; ncm_res\nplot(ncm_res)\n\n\n\n\n\n\nFigure 7.1: NCM model\nR2 represents the overall goodness of fit of the neutral community model, and the higher the R2, the closer it is to the neutral model, that is, the more the community construction is affected by the stochastic process and the less the deterministic process.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Community assembly</span>"
    ]
  },
  {
    "objectID": "07-community.html#solan-ncm",
    "href": "07-community.html#solan-ncm",
    "title": "\n7  Community assembly\n",
    "section": "",
    "text": "It is only when species die or leave the system that community structure changes. At this point, the niche of the departing individual will become vacant, and other individuals will fill the niche through migration from outside the community or reproduction within the community. The dynamics of a community can therefore be described as a cycle of death - reproduction/diffusion - death.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Community assembly</span>"
    ]
  },
  {
    "objectID": "07-community.html#stegen-βnti-rcbray-based",
    "href": "07-community.html#stegen-βnti-rcbray-based",
    "title": "\n7  Community assembly\n",
    "section": "\n7.2 Stegen (βNTI & RCbray-based)",
    "text": "7.2 Stegen (βNTI & RCbray-based)\n\n\n\n\n\nFigure 7.2: Community assembly mechanisms\n\n\n\ndf2tree(taxonomy) -&gt; phylo\nnti_rc(otutab, phylo, metadata[\"Group\"], file = NULL) -&gt; nti_res\nplot(nti_res) + scale_fill_brewer(palette = \"Set3\")\n\n\n\n\n\n\nFigure 7.3: Community assembly partition based on beta-NTI & RC",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Community assembly</span>"
    ]
  },
  {
    "objectID": "07-community.html#st-nst-mst-stochasticity-ratio",
    "href": "07-community.html#st-nst-mst-stochasticity-ratio",
    "title": "\n7  Community assembly\n",
    "section": "\n7.3 ST, NST, MST (stochasticity ratio)",
    "text": "7.3 ST, NST, MST (stochasticity ratio)\nA new method is developed to quantify randomness in ecological processes. A new index, normalized stochasticity ratio (NST), is proposed as the boundary point between deterministic dominance (&lt;50%) and stochastic dominance (&gt;50%).\n\nnst(otutab, metadata[\"Group\"], file = NULL) -&gt; nst_res\nplot(nst_res, c_group = \"intra\") +\n  geom_hline(yintercept = 0.5, lty = 2) + ylab(\"NST\")\n\n\n\n\n\n\nFigure 7.4: NST between each group",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Community assembly</span>"
    ]
  },
  {
    "objectID": "08-network.html",
    "href": "08-network.html",
    "title": "\n8  Network analysis\n",
    "section": "",
    "text": "Networks can represent various systems in the real world,and have many applications in biological research,especially in systems biology: gene expression regulatory networks,metabolic networks,ecosystem space networks,microbial co-occurrence networks,protein interaction networks,etc.\nMetaNet is a comprehensive network analysis package, especially in various biological omics.\nThe latest development version can be found in https://github.com/Asa12138/MetaNet.\nPlease go to https://asa12138.github.io/MetaNet_tutorial/ for the full vignette.\n\nlibrary(MetaNet)\n\nt(otutab) -&gt; totu\nc_net_cal(totu) -&gt; corr\nc_net_build(corr, r_thres = 0.65) -&gt; co_net\n\nc_net_plot(co_net)\n\n\n\n\n\n\nFigure 8.1: Simple correlation network\n\n\n\n\n\nco_net &lt;- c_net_set(co_net, taxonomy, data.frame(\"Abundance\" = colSums(totu)),\n  vertex_class = \"Phylum\", vertex_size = \"Abundance\"\n)\nc_net_plot(co_net)\n\n\n\n\n\n\nFigure 8.2: Simple correlation network with annotation",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Network analysis</span>"
    ]
  },
  {
    "objectID": "09-enrichment.html",
    "href": "09-enrichment.html",
    "title": "\n9  Enrichment analysis\n",
    "section": "",
    "text": "9.1 ReporterScore\nInspired by the classic RSA, we developed the improved Generalized Reporter Score-based Analysis (GRSA) method, implemented in the R package ReporterScore, along with comprehensive visualization methods and pathway databases. GRSA is a threshold-free method that works well with all types of biomedical features, such as genes, chemical compounds, and microbial species. GRSA works in the mixed (classic RSA) and directed modes (enhanced RSA). The directed mode uses signs of the reporter score to distinguish up-regulated or down-regulated pathways, which is more intuitive. Importantly, the GRSA supports multi-group and longitudinal experimental designs, because of the included multi-group-compatible statistical methods. The ReporterScore package also supports custom hierarchical and relational databases (e.g., table containing the correspondence between pathways and genes), providing extra flexibility for advanced users.\nThe workflow of GRSA in the ReporterScore package is shown in Figure Figure 9.1.\nlibrary(ReporterScore)\ndata(\"reporter_score_res\")\nplot_report(reporter_score_res, rs_threshold = 2.5)\n\n\n\n\n\n\nFigure 9.2: GRSA result\nFor convenience, the ReporterScore package provides an interface to the above-mentioned enrichment methods:\ngsa_res &lt;- KO_gsa(reporter_score_res, p.adjust.method = \"BH\", perm = 100)\n## perm= 10 / 100 \n## perm= 20 / 100 \n## perm= 30 / 100 \n## perm= 40 / 100 \n## perm= 50 / 100 \n## perm= 60 / 100 \n## perm= 70 / 100 \n## perm= 80 / 100 \n## perm= 90 / 100 \n## perm= 100 / 100\nplot_enrich_res(gsa_res)\n\n\n\n\n\n\nFigure 9.3: GSA result\npadog_res &lt;- KO_padog(reporter_score_res, p.adjust.method = \"none\", perm = 100)\n## Starting with 316 gene sets!\n## Analyzing 193 gene sets with 3 or more genes!\n## # of permutations used: 100 \n## 10 / 100 \n## 20 / 100 \n## 30 / 100 \n## 40 / 100 \n## 50 / 100 \n## 60 / 100 \n## 70 / 100 \n## 80 / 100 \n## 90 / 100 \n## 100 / 100\nplot_enrich_res(padog_res)\n\n\n\n\n\n\nFigure 9.4: PADOG result",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Enrichment analysis</span>"
    ]
  },
  {
    "objectID": "09-enrichment.html#reporterscore",
    "href": "09-enrichment.html#reporterscore",
    "title": "\n9  Enrichment analysis\n",
    "section": "",
    "text": "Figure 9.1: Generalized Reporter Score-based Enrichment Analysis for Omics Data",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Enrichment analysis</span>"
    ]
  },
  {
    "objectID": "09-enrichment.html#kegg",
    "href": "09-enrichment.html#kegg",
    "title": "\n9  Enrichment analysis\n",
    "section": "\n9.2 KEGG",
    "text": "9.2 KEGG\nKEGG BRITE is a collection of hierarchical classification systems capturing functional hierarchies of various biological objects, especially those represented as KEGG objects.\nWe collected k00001 KEGG Orthology (KO) table so that you can summaries each levels abundance. Use load_KO_htable to get KO_htable and use update_KO_htable to update. Use up_level_KO can upgrade to specific level in one of “pathway”, “module”, “level1”, “level2”, “level3”, “module1”, “module2”, “module3”.\n\nKO_htable &lt;- load_KO_htable()\nhead(KO_htable, n = 20)\n\n\n\n\n\n\nlevel1_name\nlevel2_name\nlevel3_id\nlevel3_name\nKO_id\nKO_name\n\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK00844\nHK; hexokinase [EC:2.7.1.1]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK12407\nGCK; glucokinase [EC:2.7.1.2]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK00845\nglk; glucokinase [EC:2.7.1.2]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK25026\nglk; glucokinase [EC:2.7.1.2]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK01810\nGPI, pgi; glucose-6-phosphate isomerase [EC:5.3.1.9]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK06859\npgi1; glucose-6-phosphate isomerase, archaeal [EC:5.3.1.9]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK13810\ntal-pgi; transaldolase / glucose-6-phosphate isomerase [EC:2.2.1.2 5.3.1.9]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK15916\npgi-pmi; glucose/mannose-6-phosphate isomerase [EC:5.3.1.9 5.3.1.8]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK24182\nPFK9; 6-phosphofructokinase [EC:2.7.1.11]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK00850\npfkA, PFK; 6-phosphofructokinase 1 [EC:2.7.1.11]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK16370\npfkB; 6-phosphofructokinase 2 [EC:2.7.1.11]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK21071\npfk, pfp; ATP-dependent phosphofructokinase / diphosphate-dependent phosphofructokinase [EC:2.7.1.11 2.7.1.90]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK00918\npfkC; ADP-dependent phosphofructokinase/glucokinase [EC:2.7.1.146 2.7.1.147]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK00895\npfp, PFP; diphosphate-dependent phosphofructokinase [EC:2.7.1.90]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK03841\nFBP, fbp; fructose-1,6-bisphosphatase I [EC:3.1.3.11]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK02446\nglpX; fructose-1,6-bisphosphatase II [EC:3.1.3.11]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK11532\nglpX-SEBP; fructose-1,6-bisphosphatase II / sedoheptulose-1,7-bisphosphatase [EC:3.1.3.11 3.1.3.37]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK01086\nfbp-SEBP; fructose-1,6-bisphosphatase I / sedoheptulose-1,7-bisphosphatase [EC:3.1.3.11 3.1.3.37]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK04041\nfbp3; fructose-1,6-bisphosphatase III [EC:3.1.3.11]\n\n\nMetabolism\nCarbohydrate metabolism\nmap00010\nGlycolysis / Gluconeogenesis\nK01623\nALDO; fructose-bisphosphate aldolase, class I [EC:4.1.2.13]\n\n\n\n\n\n\n\n\nplot_htable(type = \"ko\")\n\n\n\n\n\n\nFigure 9.5: KEGG KO annotation categories",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Enrichment analysis</span>"
    ]
  },
  {
    "objectID": "09-enrichment.html#args-vfs",
    "href": "09-enrichment.html#args-vfs",
    "title": "\n9  Enrichment analysis\n",
    "section": "\n9.3 ARGs & VFs",
    "text": "9.3 ARGs & VFs\nFor convenience, I also included the CARD database from https://card.mcmaster.ca/download/0/broadstreet-v3.2.8.tar.bz2.\n\nCARDinfo &lt;- load_CARDinfo()\nmy_sankey(count(CARDinfo$ARO_index, `AMR Gene Family`, `Resistance Mechanism`, `Drug Class`), topN = 5)\n\n\n\n\n\n\nFigure 9.6: Sankey plot of ARG categories",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Enrichment analysis</span>"
    ]
  },
  {
    "objectID": "10-element-cycle.html",
    "href": "10-element-cycle.html",
    "title": "\n10  Elemental cycling\n",
    "section": "",
    "text": "In ecosystems, nutrients are recycled continuously through biogeochemical cycles, where all chemical elements undergo circulation between living organisms and the environment.\nMicroorganisms play a crucial role in mediating various redox reactions in anaerobic environments. Research on the metabolism of essential elements such as nitrogen, carbon, sulfur, and iron, as well as their impacts on the environment, has greatly advanced through the continuous refinement of specific enzyme functions involved in the cycling of substances like \\(NO^{3-}\\), \\(Fe^{3+}\\), and \\(SO_4^{2-}\\). This progress has significantly promoted our understanding of biogeochemical cycling processes. Analyzing functional proteins and their encoding genes involved in different metabolic pathways, and enhancing the diversity of environmental functional genes in microorganisms, further drives research in environmental microbial ecology, a vital aspect of studying biogeochemical cycles.\nThe pctax package includes built-in pathways for the cycling of five elements: nitrogen (N), carbon (C), sulfur (S), phosphorus (P), and iron (Fe). It enables users to conveniently visualize all genes or KO (KEGG Orthology) identifiers involved in these cycling pathways. Additionally, the package offers annotation capabilities to provide further insights into the functions and roles of the genes or KO identifiers within these elemental cycling pathways.\n\nplot_element_cycle(cycle = \"Nitrogen cycle\")\n\n\n\n\n\n\nFigure 10.1: N-cycle in microbial metabolism\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nClick these pictures to see clearly.\n\n\nfor (i in c(\"Carbon cycle\", \"Sulfur cycle\", \"Phosphorus cycle\", \"Iron cycle\")) {\n  plot_element_cycle(cycle = i) %&gt;% print()\n}\n\n\n\n\n\n\n\n\nFigure 10.2: C-cycle in microbial metabolism\n\n\n\n\n\n\n\n\n\nFigure 10.3: S-cycle in microbial metabolism\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.4: P-cycle in microbial metabolism\n\n\n\n\n\n\n\n\n\nFigure 10.5: Fe-cycle in microbial metabolism\n\n\n\n\n\n\n\n\nFigure 10.2: C-cycle in microbial metabolism\nFigure 10.3: S-cycle in microbial metabolism\nFigure 10.4: P-cycle in microbial metabolism\nFigure 10.5: Fe-cycle in microbial metabolism",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Elemental cycling</span>"
    ]
  },
  {
    "objectID": "11-others.html",
    "href": "11-others.html",
    "title": "\n11  Other features\n",
    "section": "",
    "text": "11.1 Metagenomic workflow\nThe analysis of metagenomic data typically involves the following steps:\nThis represents a common workflow (Figure 11.1) that can be adapted and modified based on the specific requirements and objectives of each project. Depending on the project, additional steps or modifications may be necessary to address specific research questions or challenges.\nIn most cases, upstream data analysis needs to be performed on a cluster, typically running on a Linux system. pctax provides convenient functionalities to adapt to your data and generate corresponding Slurm scripts for execution in a cluster environment. This allows you to easily integrate pctax into your data processing pipeline and leverage the computational resources of the cluster to expedite the data analysis process.\nmicro_sbatch(\n  work_dir = \"~/test_project\", step = \"fastp\",\n  all_sample_num = 40, array = 1, partition = \"cpu\",\n  cpus_per_task = 1, mem_per_cpu = \"2G\"\n)\n#!/bin/bash\n#SBATCH --job-name=fastp\n#SBATCH --output=~/test_project/log/%x_%A_%a.out\n#SBATCH --error=~/test_project/log/%x_%A_%a.err\n#SBATCH --array=1\n#SBATCH --partition=cpu\n#SBATCH --nodes=1\n#SBATCH --tasks-per-node=1\n#SBATCH --cpus-per-task=1\n#SBATCH --mem-per-cpu=2G\nsamplelist=~/test_project/samplelist\n\necho start: `date +\"%Y-%m-%d %T\"`\nstart=`date +%s`\n\n####################\necho \"SLURM_ARRAY_TASK_ID: \" $SLURM_ARRAY_TASK_ID\nSTART=$SLURM_ARRAY_TASK_ID\n\nNUMLINES=40 #how many sample in one array\n\nSTOP=$((SLURM_ARRAY_TASK_ID*NUMLINES))\nSTART=\"$(($STOP - $(($NUMLINES - 1))))\"\n\n#set the min and max\nif [ $START -lt 1 ]\nthen\n  START=1\nfi\nif [ $STOP -gt 40 ]\nthen\n  STOP=40\nfi\n\necho \"START=$START\"\necho \"STOP=$STOP\"\n\n####################\nfor (( N = $START; N &lt;= $STOP; N++ ))\ndo\n  sample=$(head -n \"$N\" $samplelist | tail -n 1)\n  echo $sample\n  mkdir -p data/fastp\n  ~/miniconda3/envs/waste/bin/fastp -w 8 -i data/rawdata/${sample}_f1.fastq.gz -o data/fastp/${sample}_1.fq.gz \\\n    -I data/rawdata/${sample}_r2.fastq.gz -O data/fastp/${sample}_2.fq.gz -j data/fastp/${i}.json\ndone\n\n##############\necho end: `date +\"%Y-%m-%d %T\"`\nend=`date +%s`\necho TIME:`expr $end - $start`s\nThere are many built-in steps in the micro_sbatch: c(“fastp”,“rm_human”,“kraken”,“kraken2”,“megahit”,“megahit2”,“prodigal”,“cluster”,“seq_stat”,“salmon-index”,“salmon-quant”,“salmon-merge”,“eggnog”,“cazy”,“rgi”,“vfdb”,“summary”).\nflowchart TD\n  A[rawdata] -- fastp, rm_human --&gt; B[cleandata]\n  B[cleandata] -- kraken2 --&gt; C[taxa abundance]:::abundance\n  B -- megahit --&gt; D[contigs]\n  D[contigs] -- prodigal --&gt; E[genes]\n  E -- cluster --&gt; F[Non-redundant genes]\n  F -- salmon-index --&gt; G[NR index]\n  G[NR index] & B --salmon-quant, salmon-merge --&gt;H[gene abundance]:::abundance\n  F -- eggnog --&gt; I[eggnog result]:::result\n  F -- cazy --&gt; J[cazy result]:::result\n  F -- rgi --&gt; K[rgi result]:::result\n  F -- vfdb --&gt; L[vfdb result]:::result\n  I --&gt; M[annotation result]\n  J --&gt; M\n  K --&gt; M\n  L --&gt; M\n  M & H -- summary --&gt; N[annotation abundance]:::abundance\nclassDef result fill:#f9f,stroke:#333,stroke-width:4px\nclassDef abundance fill:#6EC3E0,stroke:#333,stroke-width:3px\n\n\n\n\nFigure 11.2: The workflow in the micro_sbatch",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Other features</span>"
    ]
  },
  {
    "objectID": "11-others.html#metagenomic-workflow",
    "href": "11-others.html#metagenomic-workflow",
    "title": "\n11  Other features\n",
    "section": "",
    "text": "DNA Extraction and Library Preparation:\n\nDNA is extracted from environmental samples, followed by library preparation to amplify the genetic material for sequencing.\n\n\nHigh-Throughput Sequencing:\n\nThe amplified DNA is subjected to high-throughput sequencing techniques to generate raw sequence data.\n\n\nData Cleaning and Assembly:\n\nRaw sequence data undergo quality control procedures to remove low-quality and redundant sequences. The remaining sequences are assembled into longer contiguous sequences (contigs).\n\n\nGene Annotation:\n\nGenes within the contigs are annotated to assign functional information to them, providing insights into the genetic content of the metagenome.\n\n\nData Analysis:\n\nAnalyzing microbial diversity, community structure, functional features, etc., often involves further analysis after obtaining abundance tables for species or functional features.\n\n\nMAGs (Metagenome-Assembled Genomes) Binning and Evolutionary Dynamics:\n\nAdditional analyses may include the binning of MAGs to reconstruct individual genomes from metagenomic data and exploring evolutionary dynamics.\n\n\n\n\n\n\n\n\n\nFigure 11.1: Basic workflow of metagenomic analysis",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Other features</span>"
    ]
  },
  {
    "objectID": "11-others.html#fastp",
    "href": "11-others.html#fastp",
    "title": "\n11  Other features\n",
    "section": "\n11.2 fastp",
    "text": "11.2 fastp\nFastp is a versatile tool commonly used for preprocessing high-throughput sequencing data, particularly for quality control and adapter trimming. It offers a range of functionalities, including read filtering, adapter removal, quality trimming, and error correction, all in a fast and memory-efficient manner.\nOne notable feature of Fastp is its ability to generate JSON-formatted reports summarizing various metrics related to read quality and processing steps. These reports provide detailed statistics about the input data, such as the number of reads processed, quality distribution, adapter content, and trimming statistics. Additionally, the JSON output includes information about the filtering and processing steps applied to the data, facilitating thorough quality assessment and downstream analysis.\nWe can use pre_fastp to prepare the json files from fastp:\n\npre_fastp(\"my_reads.json\")",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Other features</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "1. C.\nHui, M. A. McGeoch, Zeta\nDiversity as a Concept and Metric That\nUnifies Incidence-Based Biodiversity Patterns. The\nAmerican Naturalist. 184, 684–694 (2014).\n\n\n2. W.\nShen, H. Ren, TaxonKit:\nA practical and efficient NCBI taxonomy\ntoolkit. Journal of Genetics and Genomics.\n48, 844–850 (2021).",
    "crumbs": [
      "References"
    ]
  }
]